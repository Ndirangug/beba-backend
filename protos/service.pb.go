// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: protos/service.proto

package protos

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TestHelloRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TestHelloRequest) Reset() {
	*x = TestHelloRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestHelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestHelloRequest) ProtoMessage() {}

func (x *TestHelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestHelloRequest.ProtoReflect.Descriptor instead.
func (*TestHelloRequest) Descriptor() ([]byte, []int) {
	return file_protos_service_proto_rawDescGZIP(), []int{0}
}

func (x *TestHelloRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TestHelloResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response string `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *TestHelloResponse) Reset() {
	*x = TestHelloResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestHelloResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestHelloResponse) ProtoMessage() {}

func (x *TestHelloResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestHelloResponse.ProtoReflect.Descriptor instead.
func (*TestHelloResponse) Descriptor() ([]byte, []int) {
	return file_protos_service_proto_rawDescGZIP(), []int{1}
}

func (x *TestHelloResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type EmptyMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyMessage) Reset() {
	*x = EmptyMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyMessage) ProtoMessage() {}

func (x *EmptyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyMessage.ProtoReflect.Descriptor instead.
func (*EmptyMessage) Descriptor() ([]byte, []int) {
	return file_protos_service_proto_rawDescGZIP(), []int{2}
}

type Driver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdNumber         uint32               `protobuf:"varint,5,opt,name=idNumber,proto3" json:"idNumber,omitempty"`
	FirstName        string               `protobuf:"bytes,6,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName         string               `protobuf:"bytes,7,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Email            string               `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	Phone            string               `protobuf:"bytes,9,opt,name=phone,proto3" json:"phone,omitempty"`
	Sex              string               `protobuf:"bytes,10,opt,name=sex,proto3" json:"sex,omitempty"`
	DateOfBirth      *timestamp.Timestamp `protobuf:"bytes,11,opt,name=dateOfBirth,proto3" json:"dateOfBirth,omitempty"`
	DateEmployed     *timestamp.Timestamp `protobuf:"bytes,12,opt,name=dateEmployed,proto3" json:"dateEmployed,omitempty"`
	Comment          string               `protobuf:"bytes,13,opt,name=comment,proto3" json:"comment,omitempty"`
	EvaluationReport string               `protobuf:"bytes,14,opt,name=evaluationReport,proto3" json:"evaluationReport,omitempty"`
	DriversLicence   string               `protobuf:"bytes,15,opt,name=driversLicence,proto3" json:"driversLicence,omitempty"`
	Photo            string               `protobuf:"bytes,16,opt,name=photo,proto3" json:"photo,omitempty"`
	OnTrip           bool                 `protobuf:"varint,17,opt,name=onTrip,proto3" json:"onTrip,omitempty"`
}

func (x *Driver) Reset() {
	*x = Driver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Driver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Driver) ProtoMessage() {}

func (x *Driver) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Driver.ProtoReflect.Descriptor instead.
func (*Driver) Descriptor() ([]byte, []int) {
	return file_protos_service_proto_rawDescGZIP(), []int{3}
}

func (x *Driver) GetIdNumber() uint32 {
	if x != nil {
		return x.IdNumber
	}
	return 0
}

func (x *Driver) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Driver) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Driver) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Driver) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Driver) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *Driver) GetDateOfBirth() *timestamp.Timestamp {
	if x != nil {
		return x.DateOfBirth
	}
	return nil
}

func (x *Driver) GetDateEmployed() *timestamp.Timestamp {
	if x != nil {
		return x.DateEmployed
	}
	return nil
}

func (x *Driver) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Driver) GetEvaluationReport() string {
	if x != nil {
		return x.EvaluationReport
	}
	return ""
}

func (x *Driver) GetDriversLicence() string {
	if x != nil {
		return x.DriversLicence
	}
	return ""
}

func (x *Driver) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *Driver) GetOnTrip() bool {
	if x != nil {
		return x.OnTrip
	}
	return false
}

type DriverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdNumber    uint32 `protobuf:"varint,10,opt,name=idNumber,proto3" json:"idNumber,omitempty"`
	SearchQuery string `protobuf:"bytes,11,opt,name=searchQuery,proto3" json:"searchQuery,omitempty"`
}

func (x *DriverRequest) Reset() {
	*x = DriverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverRequest) ProtoMessage() {}

func (x *DriverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverRequest.ProtoReflect.Descriptor instead.
func (*DriverRequest) Descriptor() ([]byte, []int) {
	return file_protos_service_proto_rawDescGZIP(), []int{4}
}

func (x *DriverRequest) GetIdNumber() uint32 {
	if x != nil {
		return x.IdNumber
	}
	return 0
}

func (x *DriverRequest) GetSearchQuery() string {
	if x != nil {
		return x.SearchQuery
	}
	return ""
}

type Vehicle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VehicleId          uint32               `protobuf:"varint,10,opt,name=vehicleId,proto3" json:"vehicleId,omitempty"`
	Brand              string               `protobuf:"bytes,11,opt,name=brand,proto3" json:"brand,omitempty"`
	Model              string               `protobuf:"bytes,12,opt,name=model,proto3" json:"model,omitempty"`
	ModelYear          string               `protobuf:"bytes,13,opt,name=modelYear,proto3" json:"modelYear,omitempty"`
	RegistrationNumber string               `protobuf:"bytes,14,opt,name=registrationNumber,proto3" json:"registrationNumber,omitempty"`
	FuelConsumption    float32              `protobuf:"fixed32,15,opt,name=fuelConsumption,proto3" json:"fuelConsumption,omitempty"`
	Color              string               `protobuf:"bytes,16,opt,name=color,proto3" json:"color,omitempty"`
	DatePurchased      *timestamp.Timestamp `protobuf:"bytes,17,opt,name=datePurchased,proto3" json:"datePurchased,omitempty"`
	ExpectedEndService *timestamp.Timestamp `protobuf:"bytes,18,opt,name=expectedEndService,proto3" json:"expectedEndService,omitempty"`
	Type               string               `protobuf:"bytes,19,opt,name=type,proto3" json:"type,omitempty"` //pickup small truck largetruck van tuktuk
	Condition          string               `protobuf:"bytes,20,opt,name=condition,proto3" json:"condition,omitempty"`
	MaxWeight          float32              `protobuf:"fixed32,21,opt,name=maxWeight,proto3" json:"maxWeight,omitempty"`
	CurrentLocation    *Location            `protobuf:"bytes,22,opt,name=currentLocation,proto3" json:"currentLocation,omitempty"`
	Photo              string               `protobuf:"bytes,23,opt,name=photo,proto3" json:"photo,omitempty"`
}

func (x *Vehicle) Reset() {
	*x = Vehicle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vehicle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vehicle) ProtoMessage() {}

func (x *Vehicle) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vehicle.ProtoReflect.Descriptor instead.
func (*Vehicle) Descriptor() ([]byte, []int) {
	return file_protos_service_proto_rawDescGZIP(), []int{5}
}

func (x *Vehicle) GetVehicleId() uint32 {
	if x != nil {
		return x.VehicleId
	}
	return 0
}

func (x *Vehicle) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *Vehicle) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Vehicle) GetModelYear() string {
	if x != nil {
		return x.ModelYear
	}
	return ""
}

func (x *Vehicle) GetRegistrationNumber() string {
	if x != nil {
		return x.RegistrationNumber
	}
	return ""
}

func (x *Vehicle) GetFuelConsumption() float32 {
	if x != nil {
		return x.FuelConsumption
	}
	return 0
}

func (x *Vehicle) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Vehicle) GetDatePurchased() *timestamp.Timestamp {
	if x != nil {
		return x.DatePurchased
	}
	return nil
}

func (x *Vehicle) GetExpectedEndService() *timestamp.Timestamp {
	if x != nil {
		return x.ExpectedEndService
	}
	return nil
}

func (x *Vehicle) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Vehicle) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *Vehicle) GetMaxWeight() float32 {
	if x != nil {
		return x.MaxWeight
	}
	return 0
}

func (x *Vehicle) GetCurrentLocation() *Location {
	if x != nil {
		return x.CurrentLocation
	}
	return nil
}

func (x *Vehicle) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

type VehicleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VehicleID   uint32 `protobuf:"varint,10,opt,name=vehicleID,proto3" json:"vehicleID,omitempty"`
	SearchQuery string `protobuf:"bytes,11,opt,name=searchQuery,proto3" json:"searchQuery,omitempty"`
}

func (x *VehicleRequest) Reset() {
	*x = VehicleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleRequest) ProtoMessage() {}

func (x *VehicleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleRequest.ProtoReflect.Descriptor instead.
func (*VehicleRequest) Descriptor() ([]byte, []int) {
	return file_protos_service_proto_rawDescGZIP(), []int{6}
}

func (x *VehicleRequest) GetVehicleID() uint32 {
	if x != nil {
		return x.VehicleID
	}
	return 0
}

func (x *VehicleRequest) GetSearchQuery() string {
	if x != nil {
		return x.SearchQuery
	}
	return ""
}

type VehicleKilometresTravelledResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date       string  `protobuf:"bytes,10,opt,name=date,proto3" json:"date,omitempty"`
	Kilometres float64 `protobuf:"fixed64,11,opt,name=kilometres,proto3" json:"kilometres,omitempty"`
}

func (x *VehicleKilometresTravelledResponse) Reset() {
	*x = VehicleKilometresTravelledResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleKilometresTravelledResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleKilometresTravelledResponse) ProtoMessage() {}

func (x *VehicleKilometresTravelledResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleKilometresTravelledResponse.ProtoReflect.Descriptor instead.
func (*VehicleKilometresTravelledResponse) Descriptor() ([]byte, []int) {
	return file_protos_service_proto_rawDescGZIP(), []int{7}
}

func (x *VehicleKilometresTravelledResponse) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *VehicleKilometresTravelledResponse) GetKilometres() float64 {
	if x != nil {
		return x.Kilometres
	}
	return 0
}

type Trip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TripId                 uint32               `protobuf:"varint,10,opt,name=tripId,proto3" json:"tripId,omitempty"`
	Driver                 *Driver              `protobuf:"bytes,11,opt,name=driver,proto3" json:"driver,omitempty"`
	Vehicle                *Vehicle             `protobuf:"bytes,12,opt,name=vehicle,proto3" json:"vehicle,omitempty"`
	ScheduledDepartureTime *timestamp.Timestamp `protobuf:"bytes,13,opt,name=scheduledDepartureTime,proto3" json:"scheduledDepartureTime,omitempty"`
	ActualDepartureTime    *timestamp.Timestamp `protobuf:"bytes,14,opt,name=actualDepartureTime,proto3" json:"actualDepartureTime,omitempty"`
	ScheduledArrivalTime   *timestamp.Timestamp `protobuf:"bytes,15,opt,name=scheduledArrivalTime,proto3" json:"scheduledArrivalTime,omitempty"`
	ActualArrivalTime      *timestamp.Timestamp `protobuf:"bytes,16,opt,name=actualArrivalTime,proto3" json:"actualArrivalTime,omitempty"`
	Origin                 *Location            `protobuf:"bytes,17,opt,name=origin,proto3" json:"origin,omitempty"`
	Destination            *Location            `protobuf:"bytes,18,opt,name=destination,proto3" json:"destination,omitempty"`
	Status                 string               `protobuf:"bytes,19,opt,name=status,proto3" json:"status,omitempty"` // sheduled, ongoing, cancelled
}

func (x *Trip) Reset() {
	*x = Trip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trip) ProtoMessage() {}

func (x *Trip) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trip.ProtoReflect.Descriptor instead.
func (*Trip) Descriptor() ([]byte, []int) {
	return file_protos_service_proto_rawDescGZIP(), []int{8}
}

func (x *Trip) GetTripId() uint32 {
	if x != nil {
		return x.TripId
	}
	return 0
}

func (x *Trip) GetDriver() *Driver {
	if x != nil {
		return x.Driver
	}
	return nil
}

func (x *Trip) GetVehicle() *Vehicle {
	if x != nil {
		return x.Vehicle
	}
	return nil
}

func (x *Trip) GetScheduledDepartureTime() *timestamp.Timestamp {
	if x != nil {
		return x.ScheduledDepartureTime
	}
	return nil
}

func (x *Trip) GetActualDepartureTime() *timestamp.Timestamp {
	if x != nil {
		return x.ActualDepartureTime
	}
	return nil
}

func (x *Trip) GetScheduledArrivalTime() *timestamp.Timestamp {
	if x != nil {
		return x.ScheduledArrivalTime
	}
	return nil
}

func (x *Trip) GetActualArrivalTime() *timestamp.Timestamp {
	if x != nil {
		return x.ActualArrivalTime
	}
	return nil
}

func (x *Trip) GetOrigin() *Location {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *Trip) GetDestination() *Location {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *Trip) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type TripsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VehicleId uint32               `protobuf:"varint,10,opt,name=vehicleId,proto3" json:"vehicleId,omitempty"`
	DriverId  uint32               `protobuf:"varint,11,opt,name=driverId,proto3" json:"driverId,omitempty"`
	StartDate *timestamp.Timestamp `protobuf:"bytes,12,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate   *timestamp.Timestamp `protobuf:"bytes,13,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Status    string               `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *TripsRequest) Reset() {
	*x = TripsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TripsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripsRequest) ProtoMessage() {}

func (x *TripsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripsRequest.ProtoReflect.Descriptor instead.
func (*TripsRequest) Descriptor() ([]byte, []int) {
	return file_protos_service_proto_rawDescGZIP(), []int{9}
}

func (x *TripsRequest) GetVehicleId() uint32 {
	if x != nil {
		return x.VehicleId
	}
	return 0
}

func (x *TripsRequest) GetDriverId() uint32 {
	if x != nil {
		return x.DriverId
	}
	return 0
}

func (x *TripsRequest) GetStartDate() *timestamp.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *TripsRequest) GetEndDate() *timestamp.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *TripsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type RecordId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RecordId) Reset() {
	*x = RecordId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordId) ProtoMessage() {}

func (x *RecordId) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordId.ProtoReflect.Descriptor instead.
func (*RecordId) Descriptor() ([]byte, []int) {
	return file_protos_service_proto_rawDescGZIP(), []int{10}
}

func (x *RecordId) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type WriteRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   bool   `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	Message  string `protobuf:"bytes,11,opt,name=message,proto3" json:"message,omitempty"`
	RecordId uint32 `protobuf:"varint,12,opt,name=recordId,proto3" json:"recordId,omitempty"`
}

func (x *WriteRecordResponse) Reset() {
	*x = WriteRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRecordResponse) ProtoMessage() {}

func (x *WriteRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRecordResponse.ProtoReflect.Descriptor instead.
func (*WriteRecordResponse) Descriptor() ([]byte, []int) {
	return file_protos_service_proto_rawDescGZIP(), []int{11}
}

func (x *WriteRecordResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *WriteRecordResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WriteRecordResponse) GetRecordId() uint32 {
	if x != nil {
		return x.RecordId
	}
	return 0
}

type TextMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string  `protobuf:"bytes,10,opt,name=messageId,proto3" json:"messageId,omitempty"`
	Recepient *Driver `protobuf:"bytes,11,opt,name=recepient,proto3" json:"recepient,omitempty"`
	Text      string  `protobuf:"bytes,12,opt,name=text,proto3" json:"text,omitempty"`
	TimeSent  string  `protobuf:"bytes,13,opt,name=timeSent,proto3" json:"timeSent,omitempty"`
}

func (x *TextMessage) Reset() {
	*x = TextMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextMessage) ProtoMessage() {}

func (x *TextMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextMessage.ProtoReflect.Descriptor instead.
func (*TextMessage) Descriptor() ([]byte, []int) {
	return file_protos_service_proto_rawDescGZIP(), []int{12}
}

func (x *TextMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *TextMessage) GetRecepient() *Driver {
	if x != nil {
		return x.Recepient
	}
	return nil
}

func (x *TextMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TextMessage) GetTimeSent() string {
	if x != nil {
		return x.TimeSent
	}
	return ""
}

type SendMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string `protobuf:"bytes,10,opt,name=messageId,proto3" json:"messageId,omitempty"`
	Status    bool   `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	Message   string `protobuf:"bytes,12,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_protos_service_proto_rawDescGZIP(), []int{13}
}

func (x *SendMessageResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *SendMessageResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *SendMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DisburseFundsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Driver *Driver `protobuf:"bytes,10,opt,name=driver,proto3" json:"driver,omitempty"`
	Amount float64 `protobuf:"fixed64,11,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *DisburseFundsRequest) Reset() {
	*x = DisburseFundsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisburseFundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisburseFundsRequest) ProtoMessage() {}

func (x *DisburseFundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisburseFundsRequest.ProtoReflect.Descriptor instead.
func (*DisburseFundsRequest) Descriptor() ([]byte, []int) {
	return file_protos_service_proto_rawDescGZIP(), []int{14}
}

func (x *DisburseFundsRequest) GetDriver() *Driver {
	if x != nil {
		return x.Driver
	}
	return nil
}

func (x *DisburseFundsRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type DisburseFundsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  bool   `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,11,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DisburseFundsResponse) Reset() {
	*x = DisburseFundsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisburseFundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisburseFundsResponse) ProtoMessage() {}

func (x *DisburseFundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisburseFundsResponse.ProtoReflect.Descriptor instead.
func (*DisburseFundsResponse) Descriptor() ([]byte, []int) {
	return file_protos_service_proto_rawDescGZIP(), []int{15}
}

func (x *DisburseFundsResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *DisburseFundsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat  float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Long float64 `protobuf:"fixed64,2,opt,name=long,proto3" json:"long,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_protos_service_proto_rawDescGZIP(), []int{16}
}

func (x *Location) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Location) GetLong() float64 {
	if x != nil {
		return x.Long
	}
	return 0
}

var File_protos_service_proto protoreflect.FileDescriptor

var file_protos_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x26, 0x0a, 0x10, 0x54, 0x65, 0x73, 0x74, 0x48, 0x65, 0x6c,
	0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a,
	0x11, 0x54, 0x65, 0x73, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0e,
	0x0a, 0x0c, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb6,
	0x03, 0x0a, 0x06, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x64, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x3c, 0x0a,
	0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x3e, 0x0a, 0x0c, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x70, 0x22, 0x4d, 0x0a, 0x0d, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x64, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x97, 0x04, 0x0a, 0x07, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x75,
	0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0f, 0x66, 0x75, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x0d, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x12, 0x4a, 0x0a, 0x12,
	0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x6e,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61,
	0x78, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6d,
	0x61, 0x78, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x22, 0x50, 0x0a, 0x0e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x22, 0x58, 0x0a, 0x22, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4b, 0x69, 0x6c,
	0x6f, 0x6d, 0x65, 0x74, 0x72, 0x65, 0x73, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x6b, 0x69, 0x6c, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0a, 0x6b, 0x69, 0x6c, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x65, 0x73, 0x22, 0xbb, 0x04, 0x0a,
	0x04, 0x54, 0x72, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x12, 0x2c, 0x0a,
	0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x76,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62,
	0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x52, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x52, 0x0a, 0x16,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x16, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x4c, 0x0a, 0x13, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x13, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4e,
	0x0a, 0x14, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x41, 0x72, 0x72, 0x69, 0x76,
	0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x48,
	0x0a, 0x11, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x72, 0x72,
	0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x0c, 0x54,
	0x72, 0x69, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x76,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1a, 0x0a,
	0x08, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x63, 0x0a, 0x13, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0x8f,
	0x01, 0x0a, 0x0b, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x09,
	0x72, 0x65, 0x63, 0x65, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x09, 0x72, 0x65, 0x63, 0x65, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x6e, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x6e, 0x74,
	0x22, 0x65, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5c, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x62, 0x75,
	0x72, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x49, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73,
	0x65, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x30, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6c, 0x6f,
	0x6e, 0x67, 0x32, 0xec, 0x08, 0x0a, 0x0b, 0x42, 0x65, 0x62, 0x61, 0x42, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x12, 0x4c, 0x0a, 0x09, 0x54, 0x65, 0x73, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12,
	0x1e, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x54,
	0x65, 0x73, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x54,
	0x65, 0x73, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x12, 0x1b,
	0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x65,
	0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x30, 0x01, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x73, 0x12, 0x1c, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x30, 0x01, 0x12, 0x3e, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x70, 0x73, 0x12, 0x1a, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x30, 0x01, 0x12, 0x44, 0x0a, 0x09, 0x4e, 0x65,
	0x77, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x1a, 0x21, 0x2e,
	0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x15,
	0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x1a, 0x21, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x54,
	0x72, 0x69, 0x70, 0x12, 0x12, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x1a, 0x21, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x70, 0x12, 0x16, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64,
	0x1a, 0x21, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x1a, 0x21, 0x2e, 0x62, 0x65,
	0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a,
	0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12,
	0x16, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x1a, 0x21, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x1a, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x4b, 0x69, 0x6c, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x65, 0x73, 0x54,
	0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4b, 0x69, 0x6c,
	0x6f, 0x6d, 0x65, 0x74, 0x72, 0x65, 0x73, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x4b, 0x0a, 0x0b, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x2e, 0x62, 0x65, 0x62, 0x61,
	0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x21, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x62, 0x75,
	0x72, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x22, 0x2e, 0x62, 0x65, 0x62, 0x61, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x65,
	0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x62,
	0x65, 0x62, 0x61, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x69, 0x73, 0x62,
	0x75, 0x72, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6e, 0x64, 0x69, 0x72, 0x61, 0x6e, 0x67, 0x75, 0x67, 0x2f, 0x62, 0x65, 0x62, 0x61, 0x2d, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_service_proto_rawDescOnce sync.Once
	file_protos_service_proto_rawDescData = file_protos_service_proto_rawDesc
)

func file_protos_service_proto_rawDescGZIP() []byte {
	file_protos_service_proto_rawDescOnce.Do(func() {
		file_protos_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_service_proto_rawDescData)
	})
	return file_protos_service_proto_rawDescData
}

var file_protos_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_protos_service_proto_goTypes = []interface{}{
	(*TestHelloRequest)(nil),                   // 0: beba_backend.TestHelloRequest
	(*TestHelloResponse)(nil),                  // 1: beba_backend.TestHelloResponse
	(*EmptyMessage)(nil),                       // 2: beba_backend.EmptyMessage
	(*Driver)(nil),                             // 3: beba_backend.Driver
	(*DriverRequest)(nil),                      // 4: beba_backend.DriverRequest
	(*Vehicle)(nil),                            // 5: beba_backend.Vehicle
	(*VehicleRequest)(nil),                     // 6: beba_backend.VehicleRequest
	(*VehicleKilometresTravelledResponse)(nil), // 7: beba_backend.VehicleKilometresTravelledResponse
	(*Trip)(nil),                               // 8: beba_backend.Trip
	(*TripsRequest)(nil),                       // 9: beba_backend.TripsRequest
	(*RecordId)(nil),                           // 10: beba_backend.RecordId
	(*WriteRecordResponse)(nil),                // 11: beba_backend.WriteRecordResponse
	(*TextMessage)(nil),                        // 12: beba_backend.TextMessage
	(*SendMessageResponse)(nil),                // 13: beba_backend.SendMessageResponse
	(*DisburseFundsRequest)(nil),               // 14: beba_backend.DisburseFundsRequest
	(*DisburseFundsResponse)(nil),              // 15: beba_backend.DisburseFundsResponse
	(*Location)(nil),                           // 16: beba_backend.Location
	(*timestamp.Timestamp)(nil),                // 17: google.protobuf.Timestamp
}
var file_protos_service_proto_depIdxs = []int32{
	17, // 0: beba_backend.Driver.dateOfBirth:type_name -> google.protobuf.Timestamp
	17, // 1: beba_backend.Driver.dateEmployed:type_name -> google.protobuf.Timestamp
	17, // 2: beba_backend.Vehicle.datePurchased:type_name -> google.protobuf.Timestamp
	17, // 3: beba_backend.Vehicle.expectedEndService:type_name -> google.protobuf.Timestamp
	16, // 4: beba_backend.Vehicle.currentLocation:type_name -> beba_backend.Location
	3,  // 5: beba_backend.Trip.driver:type_name -> beba_backend.Driver
	5,  // 6: beba_backend.Trip.vehicle:type_name -> beba_backend.Vehicle
	17, // 7: beba_backend.Trip.scheduledDepartureTime:type_name -> google.protobuf.Timestamp
	17, // 8: beba_backend.Trip.actualDepartureTime:type_name -> google.protobuf.Timestamp
	17, // 9: beba_backend.Trip.scheduledArrivalTime:type_name -> google.protobuf.Timestamp
	17, // 10: beba_backend.Trip.actualArrivalTime:type_name -> google.protobuf.Timestamp
	16, // 11: beba_backend.Trip.origin:type_name -> beba_backend.Location
	16, // 12: beba_backend.Trip.destination:type_name -> beba_backend.Location
	17, // 13: beba_backend.TripsRequest.startDate:type_name -> google.protobuf.Timestamp
	17, // 14: beba_backend.TripsRequest.endDate:type_name -> google.protobuf.Timestamp
	3,  // 15: beba_backend.TextMessage.recepient:type_name -> beba_backend.Driver
	3,  // 16: beba_backend.DisburseFundsRequest.driver:type_name -> beba_backend.Driver
	0,  // 17: beba_backend.BebaBackend.TestHello:input_type -> beba_backend.TestHelloRequest
	4,  // 18: beba_backend.BebaBackend.GetDrivers:input_type -> beba_backend.DriverRequest
	6,  // 19: beba_backend.BebaBackend.GetVehicles:input_type -> beba_backend.VehicleRequest
	4,  // 20: beba_backend.BebaBackend.GetDriver:input_type -> beba_backend.DriverRequest
	6,  // 21: beba_backend.BebaBackend.GetVehicle:input_type -> beba_backend.VehicleRequest
	9,  // 22: beba_backend.BebaBackend.GetTrips:input_type -> beba_backend.TripsRequest
	3,  // 23: beba_backend.BebaBackend.NewDriver:input_type -> beba_backend.Driver
	5,  // 24: beba_backend.BebaBackend.NewVehicle:input_type -> beba_backend.Vehicle
	8,  // 25: beba_backend.BebaBackend.NewTrip:input_type -> beba_backend.Trip
	10, // 26: beba_backend.BebaBackend.CancelTrip:input_type -> beba_backend.RecordId
	10, // 27: beba_backend.BebaBackend.RemoveDriver:input_type -> beba_backend.RecordId
	10, // 28: beba_backend.BebaBackend.RemoveVehicle:input_type -> beba_backend.RecordId
	6,  // 29: beba_backend.BebaBackend.VehicleKilometresTravelled:input_type -> beba_backend.VehicleRequest
	12, // 30: beba_backend.BebaBackend.SendMessage:input_type -> beba_backend.TextMessage
	14, // 31: beba_backend.BebaBackend.DisburseFunds:input_type -> beba_backend.DisburseFundsRequest
	1,  // 32: beba_backend.BebaBackend.TestHello:output_type -> beba_backend.TestHelloResponse
	3,  // 33: beba_backend.BebaBackend.GetDrivers:output_type -> beba_backend.Driver
	5,  // 34: beba_backend.BebaBackend.GetVehicles:output_type -> beba_backend.Vehicle
	3,  // 35: beba_backend.BebaBackend.GetDriver:output_type -> beba_backend.Driver
	5,  // 36: beba_backend.BebaBackend.GetVehicle:output_type -> beba_backend.Vehicle
	8,  // 37: beba_backend.BebaBackend.GetTrips:output_type -> beba_backend.Trip
	11, // 38: beba_backend.BebaBackend.NewDriver:output_type -> beba_backend.WriteRecordResponse
	11, // 39: beba_backend.BebaBackend.NewVehicle:output_type -> beba_backend.WriteRecordResponse
	11, // 40: beba_backend.BebaBackend.NewTrip:output_type -> beba_backend.WriteRecordResponse
	11, // 41: beba_backend.BebaBackend.CancelTrip:output_type -> beba_backend.WriteRecordResponse
	11, // 42: beba_backend.BebaBackend.RemoveDriver:output_type -> beba_backend.WriteRecordResponse
	11, // 43: beba_backend.BebaBackend.RemoveVehicle:output_type -> beba_backend.WriteRecordResponse
	7,  // 44: beba_backend.BebaBackend.VehicleKilometresTravelled:output_type -> beba_backend.VehicleKilometresTravelledResponse
	13, // 45: beba_backend.BebaBackend.SendMessage:output_type -> beba_backend.SendMessageResponse
	15, // 46: beba_backend.BebaBackend.DisburseFunds:output_type -> beba_backend.DisburseFundsResponse
	32, // [32:47] is the sub-list for method output_type
	17, // [17:32] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_protos_service_proto_init() }
func file_protos_service_proto_init() {
	if File_protos_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestHelloRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestHelloResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Driver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vehicle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleKilometresTravelledResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TripsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisburseFundsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisburseFundsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_service_proto_goTypes,
		DependencyIndexes: file_protos_service_proto_depIdxs,
		MessageInfos:      file_protos_service_proto_msgTypes,
	}.Build()
	File_protos_service_proto = out.File
	file_protos_service_proto_rawDesc = nil
	file_protos_service_proto_goTypes = nil
	file_protos_service_proto_depIdxs = nil
}
